// Code generated by go-swagger; DO NOT EDIT.

package stream_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetStreamURIReader is a Reader for the GetStreamURI structure.
type GetStreamURIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStreamURIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStreamURIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStreamURIBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStreamURINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStreamURIInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /stream/{id}] GetStreamURI", response, response.Code())
	}
}

// NewGetStreamURIOK creates a GetStreamURIOK with default headers values
func NewGetStreamURIOK() *GetStreamURIOK {
	return &GetStreamURIOK{}
}

/*
GetStreamURIOK describes a response with status code 200, with default header values.

OK
*/
type GetStreamURIOK struct {
	Payload *GetStreamURIOKBody
}

// IsSuccess returns true when this get stream Uri o k response has a 2xx status code
func (o *GetStreamURIOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get stream Uri o k response has a 3xx status code
func (o *GetStreamURIOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stream Uri o k response has a 4xx status code
func (o *GetStreamURIOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get stream Uri o k response has a 5xx status code
func (o *GetStreamURIOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get stream Uri o k response a status code equal to that given
func (o *GetStreamURIOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get stream Uri o k response
func (o *GetStreamURIOK) Code() int {
	return 200
}

func (o *GetStreamURIOK) Error() string {
	return fmt.Sprintf("[GET /stream/{id}][%d] getStreamUriOK  %+v", 200, o.Payload)
}

func (o *GetStreamURIOK) String() string {
	return fmt.Sprintf("[GET /stream/{id}][%d] getStreamUriOK  %+v", 200, o.Payload)
}

func (o *GetStreamURIOK) GetPayload() *GetStreamURIOKBody {
	return o.Payload
}

func (o *GetStreamURIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetStreamURIOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStreamURIBadRequest creates a GetStreamURIBadRequest with default headers values
func NewGetStreamURIBadRequest() *GetStreamURIBadRequest {
	return &GetStreamURIBadRequest{}
}

/*
GetStreamURIBadRequest describes a response with status code 400, with default header values.

Not supported
*/
type GetStreamURIBadRequest struct {
}

// IsSuccess returns true when this get stream Uri bad request response has a 2xx status code
func (o *GetStreamURIBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stream Uri bad request response has a 3xx status code
func (o *GetStreamURIBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stream Uri bad request response has a 4xx status code
func (o *GetStreamURIBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stream Uri bad request response has a 5xx status code
func (o *GetStreamURIBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get stream Uri bad request response a status code equal to that given
func (o *GetStreamURIBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get stream Uri bad request response
func (o *GetStreamURIBadRequest) Code() int {
	return 400
}

func (o *GetStreamURIBadRequest) Error() string {
	return fmt.Sprintf("[GET /stream/{id}][%d] getStreamUriBadRequest ", 400)
}

func (o *GetStreamURIBadRequest) String() string {
	return fmt.Sprintf("[GET /stream/{id}][%d] getStreamUriBadRequest ", 400)
}

func (o *GetStreamURIBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStreamURINotFound creates a GetStreamURINotFound with default headers values
func NewGetStreamURINotFound() *GetStreamURINotFound {
	return &GetStreamURINotFound{}
}

/*
GetStreamURINotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetStreamURINotFound struct {
}

// IsSuccess returns true when this get stream Uri not found response has a 2xx status code
func (o *GetStreamURINotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stream Uri not found response has a 3xx status code
func (o *GetStreamURINotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stream Uri not found response has a 4xx status code
func (o *GetStreamURINotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stream Uri not found response has a 5xx status code
func (o *GetStreamURINotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get stream Uri not found response a status code equal to that given
func (o *GetStreamURINotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get stream Uri not found response
func (o *GetStreamURINotFound) Code() int {
	return 404
}

func (o *GetStreamURINotFound) Error() string {
	return fmt.Sprintf("[GET /stream/{id}][%d] getStreamUriNotFound ", 404)
}

func (o *GetStreamURINotFound) String() string {
	return fmt.Sprintf("[GET /stream/{id}][%d] getStreamUriNotFound ", 404)
}

func (o *GetStreamURINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStreamURIInternalServerError creates a GetStreamURIInternalServerError with default headers values
func NewGetStreamURIInternalServerError() *GetStreamURIInternalServerError {
	return &GetStreamURIInternalServerError{}
}

/*
GetStreamURIInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetStreamURIInternalServerError struct {
}

// IsSuccess returns true when this get stream Uri internal server error response has a 2xx status code
func (o *GetStreamURIInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stream Uri internal server error response has a 3xx status code
func (o *GetStreamURIInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stream Uri internal server error response has a 4xx status code
func (o *GetStreamURIInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get stream Uri internal server error response has a 5xx status code
func (o *GetStreamURIInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get stream Uri internal server error response a status code equal to that given
func (o *GetStreamURIInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get stream Uri internal server error response
func (o *GetStreamURIInternalServerError) Code() int {
	return 500
}

func (o *GetStreamURIInternalServerError) Error() string {
	return fmt.Sprintf("[GET /stream/{id}][%d] getStreamUriInternalServerError ", 500)
}

func (o *GetStreamURIInternalServerError) String() string {
	return fmt.Sprintf("[GET /stream/{id}][%d] getStreamUriInternalServerError ", 500)
}

func (o *GetStreamURIInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GetStreamURIOKBody get stream URI o k body
swagger:model GetStreamURIOKBody
*/
type GetStreamURIOKBody struct {

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this get stream URI o k body
func (o *GetStreamURIOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get stream URI o k body based on context it is used
func (o *GetStreamURIOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetStreamURIOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetStreamURIOKBody) UnmarshalBinary(b []byte) error {
	var res GetStreamURIOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
